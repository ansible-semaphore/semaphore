# This dockerfile provides an example of using the production image in a working stack
version: '2'

services:

  mysql:
    image: mysql:5.6
    hostname: mysql
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_DATABASE: semaphore
      MYSQL_USER: semaphore
      MYSQL_PASSWORD: hx4hjxqthfwbfsy5535u4agfdscm

  semaphore:
    image: semaphoreui/semaphore:prod-compose
    build:
      context: ./../../../
      dockerfile: ./deployment/docker/prod/Dockerfile
    environment:
      SEMAPHORE_DB_DIALECT: mysql
      SEMAPHORE_DB_USER: semaphore
      SEMAPHORE_DB_PASS: hx4hjxqthfwbfsy5535u4agfdscm
      SEMAPHORE_DB_HOST: mysql
      SEMAPHORE_DB_PORT: 3306
      SEMAPHORE_DB: semaphore
      SEMAPHORE_ADMIN_PASSWORD: cangetin
      SEMAPHORE_ADMIN_NAME: admin
      SEMAPHORE_ADMIN_EMAIL: admin@localhost
      SEMAPHORE_ADMIN: admin
      SEMAPHORE_LDAP_ACTIVATED: 'no' # set to yes if you wish to use ldap
      SEMAPHORE_LDAP_HOST: dc01.local.example.com
      SEMAPHORE_LDAP_PORT: '636'
      SEMAPHORE_LDAP_NEEDTLS: 'yes'
      SEMAPHORE_LDAP_DN_BIND: 'uid=bind_user,cn=users,cn=accounts,dc=local,dc=shiftsystems,dc=net'
      SEMAPHORE_LDAP_PASSWORD: 'ldap_bind_account_password'
      SEMAPHORE_LDAP_DN_SEARCH: 'dc=local,dc=example,dc=com'
      SEMAPHORE_LDAP_SEARCH_FILTER: "(\u0026(uid=%s)(memberOf=cn=ipausers,cn=groups,cn=accounts,dc=local,dc=example,dc=com))"
    depends_on:
      - mysql
  semaphore_proxy:
    image: ansiblesemaphore/proxy:latest
    build:
      context: ./proxy
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - semaphore
